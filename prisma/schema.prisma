generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  name     String
  password String
  role     Role
  Payment  Payment[]
  Sell     Sell[]
  Session  Session[]
}

model Session {
  id         String    @id @default(uuid())
  userId     String
  logoutTime DateTime?
  loginTime  DateTime
  user       User      @relation(fields: [userId], references: [id])
}

model Customer {
  id          String    @id @default(uuid())
  name        String
  address     String?
  phoneNumber String?
  Billing     Billing[]
  Payment     Payment[]
  Sell        Sell[]

  @@unique([name, address, phoneNumber])
}

model Item {
  name        String       @id
  description String?
  companyName String
  company     Company      @relation(fields: [companyName], references: [name])
  ItemOfSell  ItemOfSell[]
  Purchase    Purchase[]
}

model Company {
  name        String  @id
  description String?
  Item        Item[]
}

model Purchase {
  id            String    @id @default(uuid())
  invoiceNumber String
  itemName      String
  price         Int
  registerDate  DateTime  @default(now())
  finishDate    DateTime?
  totalCount    Int
  inStockCount  Int
  updatedAt     DateTime  @updatedAt
  item          Item      @relation(fields: [itemName], references: [name])

  @@unique([itemName, invoiceNumber])
}

model Sell {
  id            String          @id @default(uuid())
  userId        String
  date          DateTime        @default(now())
  customerId    String?
  BillingInfo   Billing?
  ItemOfSell    ItemOfSell[]
  PaymentOfSell PaymentOfSell[]
  Customer      Customer?       @relation(fields: [customerId], references: [id])
  user          User            @relation(fields: [userId], references: [id])
}

model Billing {
  invoice    Int      @id @default(autoincrement())
  customerId String
  sellId     String   @unique
  customer   Customer @relation(fields: [customerId], references: [id])
  sell       Sell     @relation(fields: [sellId], references: [id])
}

model ItemOfSell {
  id       String @id @default(uuid())
  sellId   String
  itemName String
  price    Int
  count    Int
  item     Item   @relation(fields: [itemName], references: [name])
  sell     Sell   @relation(fields: [sellId], references: [id])

  @@unique([sellId, itemName])
}

model Payment {
  id            String          @id @default(uuid())
  customerId    String?
  userId        String
  amount        Int
  description   String?
  customer      Customer?       @relation(fields: [customerId], references: [id])
  user          User            @relation(fields: [userId], references: [id])
  PaymentOfSell PaymentOfSell[]
}

model PaymentOfSell {
  id        String  @id @default(uuid())
  sellId    String
  paymentId String
  amount    Int
  payment   Payment @relation(fields: [paymentId], references: [id])
  sell      Sell    @relation(fields: [sellId], references: [id])

  @@unique([sellId, paymentId])
}

enum Role {
  ADMIN
  USER
}
